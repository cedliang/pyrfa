/**
 *  OMMCProvServer is an interface which is doing non-interactive client publishing
 */

#ifndef _OMMCPROVSERVER_H
#define _OMMCPROVSERVER_H

#include "StdAfx.h"
#include "common/Encoder.h"

class RDMFieldDict;

class OMMCProvServer
{
public:
    OMMCProvServer(rfa::sessionLayer::OMMProvider* pOMMProvider,
                   rfa::common::Handle *loginHandle,
                   const std::string& vendorName,
                   const RDMFieldDict* dict,
                   rfa::logger::ComponentLogger& componentLogger);

    ~OMMCProvServer();

    void    submitData(const rfa::common::RFA_String& item, const rfa::common::RFA_Vector<rfa::common::RFA_String>& fieldList, int mType, const std::string& msgType, rfa::common::RFA_String& serviceName, const std::string& mapAction="", const std::string& mapKey="");
    void    directorySubmit(const UInt8 &mType, rfa::common::RFA_String& serviceName);
    void    closeSubmit(rfa::common::RFA_String item, const std::string& serviceName="");
    void    closeAllSubmit(const rfa::common::RFA_String& serviceName="");
    void    staleSubmit(rfa::common::RFA_String item, const std::string& serviceName="");
    void    staleAllSubmit(const rfa::common::RFA_String& serviceName="");
    void    serviceStateSubmit(int serviceState, rfa::common::RFA_String& serviceName);
    void    clearPublishedItemList();
    void    setDebugMode(const bool &debug);
    void    cleanup();

private:
    rfa::sessionLayer::OMMProvider                  *_pOMMProvider;
    Handle                                           *_pLoginHandle;
    Handle                                           *_pConnHandle;
    Handle                                           *_pErrHandle;
    bool                                            _bSendRefresh;
    RFA_String                                      _serviceName;
    RFA_String                                       _vendorName;
    RFA_Vector<rfa::common::RFA_String>             *_pItemList;
    RFA_Vector<rfa::common::RFA_String>             _itemList;
    RespMsg                                         _respMsg;
    FieldList                                       _fieldList;
    Encoder                                         _encoder;
    RespStatus                                      _respStatus;
    AttribInfo                                      _attribInfo;
    RFA_String                                      _instanceId;  // (default = "") instanceId for Login
    QualityOfService                                _qos;
    Map                                             _map;
    Series                                          _series;
    const RDMFieldDict                              *_pDict;
    RFA_String                                      _userName;  
    RFA_String                                      _position;  
    RFA_String                                      _appId;
    bool                                            _debug;
    int                                             _serviceState;

    struct    ItemInfo
    {
        RFA_String    name;
        RFA_String  srvName;
        rfa::sessionLayer::ItemToken*  token;
    };
    typedef  RFA_Vector<ItemInfo*>                  ItemMap;
    RFA_Vector<ItemInfo*>                           _itemMap;
    rfa::common::RFA_String                         _log;

private:
    // Declared, but not implemented to prevent default behavior generated by compiler
    OMMCProvServer( const OMMCProvServer & );
    OMMCProvServer & operator=( const OMMCProvServer & );
    rfa::logger::ComponentLogger                    &_componentLogger;
};



#endif // _OMMCPROVSERVER_H
